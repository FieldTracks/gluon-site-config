{
  domain_names = {
    fieldtracks = 'Fieldtracks'
  },
  

  -- origin unknown
  domain_seed = '427b72b37ff41de1b8808d1e42b80ab52065edceaf3bee27346d0a7eb8af437e',
  mesh = {
      vxlan = true,
      batman_adv = {
          -- Gateway selection class (optional)
          -- The default class 20 is based on the link quality (TQ) only,
          -- class 1 is calculated from both the TQ and the announced bandwidth
          gw_sel_class = 3,
          routing_algo = 'BATMAN_IV',
      },
  },

  -- Prefixes used within the mesh. Both are required.
  prefix4 = '172.32.0.0/16',
  prefix6 = 'fd3e:01bd:5a14:8ec5::/64',

  -- Wireless configuration for 2.4 GHz interfaces.
  wifi24 = {
   -- Wireless channel.
   channel = 1,
   ap = {
           -- ESSID used for client network.
           ssid = 'Notfalldarstellung',
       },
       mesh = {
           id = 'e4:70:b8:42:94:5b',
           -- Bitrate used for multicast/broadcast packets.
           mcast_rate = 12000,
       },
  },

 -- Wireless configuration for 5 GHz interfaces.
 -- This should be equal to the 2.4 GHz variant, except for channel.
 wifi5 = {
       channel = 44,
       ap = {
           ssid = 'Notfalldarstellung',
       },
       mesh = {
         id = 'e4:70:b8:42:94:5b',
         mcast_rate = 12000,
       },
 },
 -- The next node feature allows clients to always reach the node it is
 -- connected to using a known IP address.
 next_node = {
   -- anycast IPs of all nodes
   ip6 = 'fd3e:01bd:5a14:8ec5::42',

   -- anycast MAC of all nodes
   mac = 'e2:70:b8:42:94:5b',
 },
 mesh_on_lan = false,
 mesh_vpn = {
    fastd = {
     -- List of crypto-methods to use.
      groups = {
          backbone = {
            -- Limit number of connected peers to reduce bandwidth.
            limit = 1,
           -- List of peers.
            peers = {
              router = {
                      key = '2290d45ba26d4b08652e57e046fc0a286d1535bcdb314214564b3e1d3be2f5cd',
                      remotes = {'ipv4 "router.fieldtracks.org" port 10423'},
                   },
            },
         },
       },
    },
  },

}
